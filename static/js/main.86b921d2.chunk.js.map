{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","translate","onTranslate","maxTranslate","length","disableForward","disableBack","className","style","width","transition","transform","map","image","index","src","alt","toString","disabled","cn","type","onClick","App","imagesData","useState","setItemWidth","setFrameSize","setStep","setAnimationDuration","setInfinite","setTranslate","htmlFor","id","min","max","value","onChange","event","target","checked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.86b921d2.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n  translate: number;\n  onTranslate: React.Dispatch<React.SetStateAction<number>>;\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n  translate,\n  onTranslate,\n}) => {\n  const maxTranslate = (images.length - frameSize) * itemWidth;\n  const minTranslate = 0;\n  const disableForward = translate === maxTranslate && !infinite;\n  const disableBack = translate === minTranslate && !infinite;\n\n  const moveForward = () => {\n    if (infinite && translate === maxTranslate) {\n      onTranslate(minTranslate);\n\n      return;\n    }\n\n    const newTranslate = translate + (step * itemWidth) > maxTranslate\n      ? maxTranslate\n      : translate + (step * itemWidth);\n\n    onTranslate(newTranslate);\n  };\n\n  const moveBack = () => {\n    if (infinite && translate === minTranslate) {\n      onTranslate(maxTranslate);\n\n      return;\n    }\n\n    const newTranslate = translate - (step * itemWidth) <= minTranslate\n      ? minTranslate\n      : translate - (step * itemWidth);\n\n    onTranslate(newTranslate);\n  };\n\n  return (\n    <div\n      className=\"Carousel\"\n      data-qa={infinite}\n      style={{ width: `${frameSize * itemWidth}px`, transition: `${animationDuration}ms all` }}\n    >\n      <div className=\"Carousel__container\">\n        <ul\n          className=\"Carousel__list\"\n          style={{ transition: `${animationDuration}ms all`, transform: `translateX(-${translate}px)` }}\n        >\n          {images.map((image, index) => {\n            return (\n              <li key={image}>\n                <img\n                  src={image}\n                  alt={(index + 1).toString()}\n                  style={{ width: `${itemWidth}px` }}\n                  data-qa={step}\n                />\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"Carousel__buttons\">\n        <button\n          style={{ transition: `${animationDuration}ms all` }}\n          disabled={disableBack}\n          className={cn(\n            'Carousel__button',\n            { 'Carousel__button--disabled': disableBack },\n          )}\n          type=\"button\"\n          onClick={moveBack}\n        >\n          Prev\n\n        </button>\n\n        <button\n          data-cy=\"next\"\n          style={{ transition: `${animationDuration}ms all` }}\n          disabled={disableForward}\n          className={cn(\n            'Carousel__button',\n            { 'Carousel__button--disabled': disableForward },\n          )}\n          type=\"button\"\n          onClick={moveForward}\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React, { useState } from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\nexport const App: React.FC = () => {\n  const imagesData: string[] = [\n    './img/1.png',\n    './img/2.png',\n    './img/3.png',\n    './img/4.png',\n    './img/5.png',\n    './img/6.png',\n    './img/7.png',\n    './img/8.png',\n    './img/9.png',\n    './img/10.png',\n  ];\n\n  const [itemWidth, setItemWidth] = useState(130);\n  const [frameSize, setFrameSize] = useState(3);\n  const [step, setStep] = useState(3);\n  const [animationDuration, setAnimationDuration] = useState(1000);\n  const [infinite, setInfinite] = useState(false);\n  const [translate, setTranslate] = useState(0);\n\n  const getNewItemWidth = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    if (itemWidth !== +value) {\n      setItemWidth(+value);\n\n      const newTranslate = translate + (step * itemWidth - translate);\n\n      setTranslate(newTranslate);\n    }\n  };\n\n  const getNewFrameSize = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    if (frameSize !== +value) {\n      setFrameSize(+value);\n    }\n  };\n\n  const getNewStep = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    if (step !== +value) {\n      setStep(+value);\n    }\n  };\n\n  const getNewAD = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    if (animationDuration !== +value) {\n      setAnimationDuration(+value);\n    }\n  };\n\n  const getNewInfinte = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { checked } = event.target;\n\n    if (checked) {\n      setInfinite(true);\n    } else {\n      setInfinite(false);\n    }\n  };\n\n  return (\n    <div className=\"App\" data-cy=\"title\">\n      <h1>\n        Carousel with\n        {' '}\n        {imagesData.length}\n        {' '}\n        images\n      </h1>\n      <Carousel\n        images={imagesData}\n        step={step}\n        frameSize={frameSize}\n        itemWidth={itemWidth}\n        animationDuration={animationDuration}\n        infinite={infinite}\n        translate={translate}\n        onTranslate={setTranslate}\n      />\n\n      <div className=\"App__setting\">\n        <label htmlFor=\"itemWidth\" className=\"App__label\">\n          Item width:\n          <input\n            className=\"App__input\"\n            id=\"itemWidth\"\n            type=\"number\"\n            min={30}\n            max={400}\n            value={itemWidth}\n            onChange={getNewItemWidth}\n          />\n        </label>\n\n        <label htmlFor=\"frameSize\" className=\"App__label\">\n          Frame size:\n          <input\n            className=\"App__input\"\n            id=\"frameSize\"\n            type=\"number\"\n            min={1}\n            max={10}\n            value={frameSize}\n            onChange={getNewFrameSize}\n          />\n        </label>\n\n        <label htmlFor=\"step\" className=\"App__label\">\n          Step:\n          <input\n            className=\"App__input\"\n            id=\"step\"\n            type=\"number\"\n            min={1}\n            max={10}\n            value={step}\n            onChange={getNewStep}\n          />\n        </label>\n\n        <label htmlFor=\"animationDuration\" className=\"App__label\">\n          Animation duration:\n          <input\n            className=\"App__input\"\n            id=\"animationDuration\"\n            type=\"number\"\n            min={250}\n            max={5000}\n            step={250}\n            value={animationDuration}\n            onChange={getNewAD}\n          />\n        </label>\n\n        <label htmlFor=\"infinite\" className=\"App__label\">\n          Infinite:\n          <input\n            className=\"App__input  App__input--checkbox\"\n            id=\"infinite\"\n            type=\"checkbox\"\n            checked={infinite}\n            onChange={getNewInfinte}\n          />\n        </label>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}